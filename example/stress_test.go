package example

import (
	"das_sub_account/config"
	"das_sub_account/http_server/handle"
	"das_sub_account/tables"
	"fmt"
	"github.com/dotbitHQ/das-lib/common"
	"github.com/dotbitHQ/das-lib/core"
	"sync"
	"testing"
	"time"
)

func TestStressTest(t *testing.T) {
	account := "2022121501.bit"
	pk := ""
	var list []handle.CreateSubAccount
	for i := 0; i < 300; i++ {
		list = append(list, handle.CreateSubAccount{
			Account:       fmt.Sprintf("test02-%d.%s", i, account),
			RegisterYears: 1,
			ChainTypeAddress: core.ChainTypeAddress{
				Type: "blockchain",
				KeyInfo: core.KeyInfo{
					CoinType: "60",
					ChainId:  "5",
					Key:      "0xc9f53b1d85356B60453F867610888D89a0B667Ad",
				},
			},
		})
	}
	if err := doSubAccountCreate(account, addr, pk, list); err != nil {
		t.Fatal(err)
	}
}

func TestStressBatch(t *testing.T) {
	addr1 := "0x15a33588908cF8Edb27D1AbE3852Bf287Abd3891"
	addr2 := "0xc9f53b1d85356B60453F867610888D89a0B667Ad"
	privateKey1 := ""
	privateKey2 := ""

	// 0x15a33588908cF8Edb27D1AbE3852Bf287Abd3891 sv2
	account1 := "20221214.bit"
	account3 := "20221213.bit"
	acc5 := "2022121509.bit"
	acc6 := "2022121508.bit"
	acc7 := "2022121507.bit"
	acc11 := "2022121506.bit"
	acc12 := "2022121505.bit"
	acc15 := "2022121502.bit"
	acc17 := "2022121405.bit"
	acc18 := "2022121404.bit"

	// 0xc9f53b1d85356B60453F867610888D89a0B667Ad sv1
	account2 := "2022110102.bit"
	account4 := "20221209.bit"
	acc8 := "2022121408.bit"
	acc9 := "2022121407.bit"
	acc10 := "2022121406.bit"
	acc13 := "2022121504.bit"
	acc14 := "2022121503.bit"
	acc16 := "2022121501.bit"
	acc19 := "2022121401.bit"
	acc20 := "2022121603.bit"

	var wg sync.WaitGroup
	count := 100
	doSubAccountCreateCycle(&wg, account1, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, account3, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc5, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc6, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc7, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc11, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc12, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc15, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc17, addr1, privateKey1, count)
	doSubAccountCreateCycle(&wg, acc18, addr1, privateKey1, count)

	doSubAccountCreateCycle(&wg, account2, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, account4, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc8, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc9, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc10, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc13, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc14, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc16, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc19, addr2, privateKey2, count)
	doSubAccountCreateCycle(&wg, acc20, addr2, privateKey2, count)

	//doSubAccountEditConcurrency(&wg, privateKey1, el1)
	//doSubAccountEditConcurrency(&wg, privateKey1, el2)
	//doSubAccountEditConcurrency(&wg, privateKey1, el3)
	//doSubAccountEditConcurrency(&wg, privateKey1, el4)
	wg.Wait()
}

func doSubAccountCreate(account, addr, privateKey string, list []handle.CreateSubAccount) error {
	url := ApiUrl + "/sub/account/create"
	req := handle.ReqSubAccountCreate{
		ChainTypeAddress: core.ChainTypeAddress{
			Type: "blockchain",
			KeyInfo: core.KeyInfo{
				CoinType: "60",
				ChainId:  "5",
				Key:      addr,
			},
		},
		Account:        account,
		SubAccountList: list,
	}

	var data handle.RespSubAccountCreate

	if err := doReq(url, req, &data); err != nil {
		return fmt.Errorf("doReq err: %s", err.Error())
	}

	if err := doSign(data.SignInfoList, privateKey); err != nil {
		return fmt.Errorf("doSign err: %s", err.Error())
	}

	if err := doTransactionSend(handle.ReqTransactionSend{
		SignInfoList: data.SignInfoList,
	}); err != nil {
		return fmt.Errorf("doTransactionSend err: %s", err.Error())
	}
	return nil
}

func doSubAccountCreateCycle(wg *sync.WaitGroup, account, addr, privateKey string, count int) {
	var list []handle.CreateSubAccount
	for i := 0; i < count; i++ {
		list = append(list, handle.CreateSubAccount{
			Account:       fmt.Sprintf("14test-%d.%s", i, account),
			RegisterYears: 1,
			ChainTypeAddress: core.ChainTypeAddress{
				Type: "blockchain",
				KeyInfo: core.KeyInfo{
					CoinType: "60",
					ChainId:  "5",
					Key:      "0x15a33588908cF8Edb27D1AbE3852Bf287Abd3891",
				},
			},
		})
	}

	ticker := time.NewTicker(time.Second * 10)
	wg.Add(1)
	start, end := 0, 0
	go func() {
		for {
			if start < len(list) {
				start = end
			}
			if start >= len(list) {
				wg.Done()
				break
			}
			if end < len(list) {
				end += 100
			}
			if end > len(list) {
				end = len(list)
			}
			select {
			case <-ticker.C:
				fmt.Println(start, end)
				if err := doSubAccountCreate(account, addr, privateKey, list[start:end]); err != nil {
					fmt.Println("doSubAccountCreate err: ", err.Error())
				}
			}
		}
	}()
}

func doSubAccountEdit(account, privateKey string) error {
	now := time.Now().Unix()
	url := ApiUrl + "/sub/account/edit"
	req := handle.ReqSubAccountEdit{
		ChainTypeAddress: core.ChainTypeAddress{
			Type: "blockchain",
			KeyInfo: core.KeyInfo{
				CoinType: "60",
				ChainId:  "5",
				Key:      "0x15a33588908cF8Edb27D1AbE3852Bf287Abd3891",
			},
		},
		Account: account,
		EditKey: common.EditKeyRecords,
		EditValue: handle.EditInfo{
			Records: []handle.EditRecord{
				{
					Key:   "twitter",
					Type:  "profile",
					Label: "",
					Value: fmt.Sprintf("%d", now),
					TTL:   "",
				},
			},
		},
	}

	var data handle.RespSubAccountEdit

	if err := doReq(url, req, &data); err != nil {
		return fmt.Errorf("doReq err: %s", err.Error())
	}

	if err := doSign(data.SignInfoList, privateKey); err != nil {
		return fmt.Errorf("doSign err: %s", err.Error())
	}

	if err := doTransactionSend(handle.ReqTransactionSend{
		SignInfoList: data.SignInfoList,
	}); err != nil {
		return fmt.Errorf("doTransactionSend err: %s", err.Error())
	}
	return nil
}

func doSubAccountEditConcurrency(wg *sync.WaitGroup, privateKey string, editList []string) {
	var chanEditAccount = make(chan string, 10)
	go func() {
		wg.Add(1)
		defer wg.Done()

		for _, v := range editList {
			chanEditAccount <- v
		}
		close(chanEditAccount)
	}()

	for i := 0; i < 10; i++ {
		wg.Add(1)
		go func() {
			for {
				select {
				case acc, ok := <-chanEditAccount:
					if !ok {
						wg.Done()
						return
					}
					time.Sleep(time.Second * 1) // 3~5 mint
					if err := doSubAccountEdit(acc, privateKey); err != nil {
						fmt.Println("doSubAccountEdit err: ", err.Error())
					}
				}
			}
		}()
	}
}

var editList1 = []string{
	"test-0.20221212.bit",
	"test-1.20221212.bit",
	"test-10.20221212.bit",
	"test-11.20221212.bit",
	"test-12.20221212.bit",
	"test-13.20221212.bit",
	"test-14.20221212.bit",
	"test-15.20221212.bit",
	"test-16.20221212.bit",
	"test-17.20221212.bit",
	"test-18.20221212.bit",
	"test-19.20221212.bit",
	"test-2.20221212.bit",
	"test-20.20221212.bit",
	"test-21.20221212.bit",
	"test-22.20221212.bit",
	"test-23.20221212.bit",
	"test-24.20221212.bit",
	"test-25.20221212.bit",
	"test-26.20221212.bit",
	"test-27.20221212.bit",
	"test-28.20221212.bit",
	"test-29.20221212.bit",
	"test-3.20221212.bit",
	"test-30.20221212.bit",
	"test-31.20221212.bit",
	"test-32.20221212.bit",
	"test-33.20221212.bit",
	"test-34.20221212.bit",
	"test-35.20221212.bit",
	"test-36.20221212.bit",
	"test-37.20221212.bit",
	"test-38.20221212.bit",
	"test-39.20221212.bit",
	"test-4.20221212.bit",
	"test-40.20221212.bit",
	"test-41.20221212.bit",
	"test-42.20221212.bit",
	"test-43.20221212.bit",
	"test-44.20221212.bit",
	"test-45.20221212.bit",
	"test-46.20221212.bit",
	"test-47.20221212.bit",
	"test-48.20221212.bit",
	"test-49.20221212.bit",
	"test-5.20221212.bit",
	"test-50.20221212.bit",
	"test-51.20221212.bit",
	"test-52.20221212.bit",
	"test-53.20221212.bit",
	"test-54.20221212.bit",
	"test-55.20221212.bit",
	"test-56.20221212.bit",
	"test-57.20221212.bit",
	"test-58.20221212.bit",
	"test-59.20221212.bit",
	"test-6.20221212.bit",
	"test-60.20221212.bit",
	"test-61.20221212.bit",
	"test-62.20221212.bit",
	"test-63.20221212.bit",
	"test-64.20221212.bit",
	"test-65.20221212.bit",
	"test-66.20221212.bit",
	"test-67.20221212.bit",
	"test-68.20221212.bit",
	"test-69.20221212.bit",
	"test-7.20221212.bit",
	"test-70.20221212.bit",
	"test-71.20221212.bit",
	"test-72.20221212.bit",
	"test-73.20221212.bit",
	"test-74.20221212.bit",
	"test-75.20221212.bit",
	"test-76.20221212.bit",
	"test-77.20221212.bit",
	"test-78.20221212.bit",
	"test-79.20221212.bit",
	"test-8.20221212.bit",
	"test-80.20221212.bit",
	"test-81.20221212.bit",
	"test-82.20221212.bit",
	"test-83.20221212.bit",
	"test-84.20221212.bit",
	"test-85.20221212.bit",
	"test-86.20221212.bit",
	"test-87.20221212.bit",
	"test-88.20221212.bit",
	"test-89.20221212.bit",
	"test-9.20221212.bit",
	"test-90.20221212.bit",
	"test-91.20221212.bit",
	"test-92.20221212.bit",
	"test-93.20221212.bit",
	"test-94.20221212.bit",
	"test-95.20221212.bit",
	"test-96.20221212.bit",
	"test-97.20221212.bit",
	"test-98.20221212.bit",
	"test-99.20221212.bit",
	"test1-0.20221212.bit",
	"test1-1.20221212.bit",
	"test1-10.20221212.bit",
	"test1-11.20221212.bit",
	"test1-12.20221212.bit",
	"test1-13.20221212.bit",
	"test1-14.20221212.bit",
	"test1-15.20221212.bit",
	"test1-16.20221212.bit",
	"test1-17.20221212.bit",
	"test1-18.20221212.bit",
	"test1-19.20221212.bit",
	"test1-2.20221212.bit",
	"test1-20.20221212.bit",
	"test1-21.20221212.bit",
	"test1-22.20221212.bit",
	"test1-23.20221212.bit",
	"test1-24.20221212.bit",
	"test1-25.20221212.bit",
	"test1-26.20221212.bit",
	"test1-27.20221212.bit",
	"test1-28.20221212.bit",
	"test1-29.20221212.bit",
	"test1-3.20221212.bit",
	"test1-30.20221212.bit",
	"test1-31.20221212.bit",
	"test1-32.20221212.bit",
	"test1-33.20221212.bit",
	"test1-34.20221212.bit",
	"test1-35.20221212.bit",
	"test1-36.20221212.bit",
	"test1-37.20221212.bit",
	"test1-38.20221212.bit",
	"test1-39.20221212.bit",
	"test1-4.20221212.bit",
	"test1-40.20221212.bit",
	"test1-41.20221212.bit",
	"test1-42.20221212.bit",
	"test1-43.20221212.bit",
	"test1-44.20221212.bit",
	"test1-45.20221212.bit",
	"test1-46.20221212.bit",
	"test1-47.20221212.bit",
	"test1-48.20221212.bit",
	"test1-49.20221212.bit",
	"test1-5.20221212.bit",
	"test1-6.20221212.bit",
	"test1-7.20221212.bit",
	"test1-8.20221212.bit",
	"test1-9.20221212.bit",
	"test2-0.20221212.bit",
	"test2-1.20221212.bit",
	"test2-10.20221212.bit",
	"test2-11.20221212.bit",
	"test2-12.20221212.bit",
	"test2-13.20221212.bit",
	"test2-14.20221212.bit",
	"test2-15.20221212.bit",
	"test2-16.20221212.bit",
	"test2-17.20221212.bit",
	"test2-18.20221212.bit",
	"test2-19.20221212.bit",
	"test2-2.20221212.bit",
	"test2-20.20221212.bit",
	"test2-21.20221212.bit",
	"test2-22.20221212.bit",
	"test2-23.20221212.bit",
	"test2-24.20221212.bit",
	"test2-25.20221212.bit",
	"test2-26.20221212.bit",
	"test2-27.20221212.bit",
	"test2-28.20221212.bit",
	"test2-29.20221212.bit",
	"test2-3.20221212.bit",
	"test2-30.20221212.bit",
	"test2-31.20221212.bit",
	"test2-32.20221212.bit",
	"test2-33.20221212.bit",
	"test2-34.20221212.bit",
	"test2-35.20221212.bit",
	"test2-36.20221212.bit",
	"test2-37.20221212.bit",
	"test2-38.20221212.bit",
	"test2-39.20221212.bit",
	"test2-4.20221212.bit",
	"test2-40.20221212.bit",
	"test2-41.20221212.bit",
	"test2-42.20221212.bit",
	"test2-43.20221212.bit",
	"test2-44.20221212.bit",
	"test2-45.20221212.bit",
	"test2-46.20221212.bit",
	"test2-47.20221212.bit",
	"test2-48.20221212.bit",
	"test2-49.20221212.bit",
	"test2-5.20221212.bit",
	"test2-6.20221212.bit",
	"test2-7.20221212.bit",
	"test2-8.20221212.bit",
	"test2-9.20221212.bit",
	"test3-0.20221212.bit",
	"test3-1.20221212.bit",
	"test3-10.20221212.bit",
	"test3-11.20221212.bit",
	"test3-12.20221212.bit",
	"test3-13.20221212.bit",
	"test3-14.20221212.bit",
	"test3-15.20221212.bit",
	"test3-16.20221212.bit",
	"test3-17.20221212.bit",
	"test3-18.20221212.bit",
	"test3-19.20221212.bit",
	"test3-2.20221212.bit",
	"test3-20.20221212.bit",
	"test3-21.20221212.bit",
	"test3-22.20221212.bit",
	"test3-23.20221212.bit",
	"test3-24.20221212.bit",
	"test3-25.20221212.bit",
	"test3-26.20221212.bit",
	"test3-27.20221212.bit",
	"test3-28.20221212.bit",
	"test3-29.20221212.bit",
	"test3-3.20221212.bit",
	"test3-30.20221212.bit",
	"test3-31.20221212.bit",
	"test3-32.20221212.bit",
	"test3-33.20221212.bit",
	"test3-34.20221212.bit",
	"test3-35.20221212.bit",
	"test3-36.20221212.bit",
	"test3-37.20221212.bit",
	"test3-38.20221212.bit",
	"test3-39.20221212.bit",
	"test3-4.20221212.bit",
	"test3-40.20221212.bit",
	"test3-41.20221212.bit",
	"test3-42.20221212.bit",
	"test3-43.20221212.bit",
	"test3-44.20221212.bit",
	"test3-45.20221212.bit",
	"test3-46.20221212.bit",
	"test3-47.20221212.bit",
	"test3-48.20221212.bit",
	"test3-49.20221212.bit",
	"test3-5.20221212.bit",
	"test3-6.20221212.bit",
	"test3-7.20221212.bit",
	"test3-8.20221212.bit",
	"test3-9.20221212.bit",
	"test4-0.20221212.bit",
	"test4-1.20221212.bit",
	"test4-10.20221212.bit",
	"test4-100.20221212.bit",
	"test4-101.20221212.bit",
	"test4-102.20221212.bit",
	"test4-103.20221212.bit",
	"test4-104.20221212.bit",
	"test4-105.20221212.bit",
	"test4-106.20221212.bit",
	"test4-107.20221212.bit",
	"test4-108.20221212.bit",
	"test4-109.20221212.bit",
	"test4-11.20221212.bit",
	"test4-110.20221212.bit",
	"test4-111.20221212.bit",
	"test4-112.20221212.bit",
	"test4-113.20221212.bit",
	"test4-114.20221212.bit",
	"test4-115.20221212.bit",
	"test4-116.20221212.bit",
	"test4-117.20221212.bit",
	"test4-118.20221212.bit",
	"test4-119.20221212.bit",
	"test4-12.20221212.bit",
	"test4-120.20221212.bit",
	"test4-121.20221212.bit",
	"test4-122.20221212.bit",
	"test4-123.20221212.bit",
	"test4-124.20221212.bit",
	"test4-125.20221212.bit",
	"test4-126.20221212.bit",
	"test4-127.20221212.bit",
	"test4-128.20221212.bit",
	"test4-129.20221212.bit",
	"test4-13.20221212.bit",
	"test4-130.20221212.bit",
	"test4-131.20221212.bit",
	"test4-132.20221212.bit",
	"test4-133.20221212.bit",
	"test4-134.20221212.bit",
	"test4-135.20221212.bit",
	"test4-136.20221212.bit",
	"test4-137.20221212.bit",
	"test4-138.20221212.bit",
	"test4-139.20221212.bit",
	"test4-14.20221212.bit",
	"test4-140.20221212.bit",
	"test4-141.20221212.bit",
	"test4-142.20221212.bit",
	"test4-143.20221212.bit",
	"test4-144.20221212.bit",
	"test4-145.20221212.bit",
	"test4-146.20221212.bit",
	"test4-147.20221212.bit",
	"test4-148.20221212.bit",
	"test4-149.20221212.bit",
	"test4-15.20221212.bit",
	"test4-150.20221212.bit",
	"test4-151.20221212.bit",
	"test4-152.20221212.bit",
	"test4-153.20221212.bit",
	"test4-154.20221212.bit",
	"test4-155.20221212.bit",
	"test4-156.20221212.bit",
	"test4-157.20221212.bit",
	"test4-158.20221212.bit",
	"test4-159.20221212.bit",
	"test4-16.20221212.bit",
	"test4-160.20221212.bit",
	"test4-161.20221212.bit",
	"test4-162.20221212.bit",
	"test4-163.20221212.bit",
	"test4-164.20221212.bit",
	"test4-165.20221212.bit",
	"test4-166.20221212.bit",
	"test4-167.20221212.bit",
	"test4-168.20221212.bit",
	"test4-169.20221212.bit",
	"test4-17.20221212.bit",
	"test4-170.20221212.bit",
	"test4-171.20221212.bit",
	"test4-172.20221212.bit",
	"test4-173.20221212.bit",
	"test4-174.20221212.bit",
	"test4-175.20221212.bit",
	"test4-176.20221212.bit",
	"test4-177.20221212.bit",
	"test4-178.20221212.bit",
	"test4-179.20221212.bit",
	"test4-18.20221212.bit",
	"test4-180.20221212.bit",
	"test4-181.20221212.bit",
	"test4-182.20221212.bit",
	"test4-183.20221212.bit",
	"test4-184.20221212.bit",
	"test4-185.20221212.bit",
	"test4-186.20221212.bit",
	"test4-187.20221212.bit",
	"test4-188.20221212.bit",
	"test4-189.20221212.bit",
	"test4-19.20221212.bit",
	"test4-190.20221212.bit",
	"test4-191.20221212.bit",
	"test4-192.20221212.bit",
	"test4-193.20221212.bit",
	"test4-194.20221212.bit",
	"test4-195.20221212.bit",
	"test4-196.20221212.bit",
	"test4-197.20221212.bit",
	"test4-198.20221212.bit",
	"test4-199.20221212.bit",
	"test4-2.20221212.bit",
	"test4-20.20221212.bit",
	"test4-200.20221212.bit",
	"test4-201.20221212.bit",
	"test4-202.20221212.bit",
	"test4-203.20221212.bit",
	"test4-204.20221212.bit",
	"test4-205.20221212.bit",
	"test4-206.20221212.bit",
	"test4-207.20221212.bit",
	"test4-208.20221212.bit",
	"test4-209.20221212.bit",
	"test4-21.20221212.bit",
	"test4-210.20221212.bit",
	"test4-211.20221212.bit",
	"test4-212.20221212.bit",
	"test4-213.20221212.bit",
	"test4-214.20221212.bit",
	"test4-215.20221212.bit",
	"test4-216.20221212.bit",
	"test4-217.20221212.bit",
	"test4-218.20221212.bit",
	"test4-219.20221212.bit",
	"test4-22.20221212.bit",
	"test4-220.20221212.bit",
	"test4-221.20221212.bit",
	"test4-222.20221212.bit",
	"test4-223.20221212.bit",
	"test4-224.20221212.bit",
	"test4-225.20221212.bit",
	"test4-226.20221212.bit",
	"test4-227.20221212.bit",
	"test4-228.20221212.bit",
	"test4-229.20221212.bit",
	"test4-23.20221212.bit",
	"test4-230.20221212.bit",
	"test4-231.20221212.bit",
	"test4-232.20221212.bit",
	"test4-233.20221212.bit",
	"test4-234.20221212.bit",
	"test4-235.20221212.bit",
	"test4-236.20221212.bit",
	"test4-237.20221212.bit",
	"test4-238.20221212.bit",
	"test4-239.20221212.bit",
	"test4-24.20221212.bit",
	"test4-240.20221212.bit",
	"test4-241.20221212.bit",
	"test4-242.20221212.bit",
	"test4-243.20221212.bit",
	"test4-244.20221212.bit",
	"test4-245.20221212.bit",
	"test4-246.20221212.bit",
	"test4-247.20221212.bit",
	"test4-248.20221212.bit",
	"test4-249.20221212.bit",
	"test4-25.20221212.bit",
	"test4-26.20221212.bit",
	"test4-27.20221212.bit",
	"test4-28.20221212.bit",
	"test4-29.20221212.bit",
	"test4-3.20221212.bit",
	"test4-30.20221212.bit",
	"test4-31.20221212.bit",
	"test4-32.20221212.bit",
	"test4-33.20221212.bit",
	"test4-34.20221212.bit",
	"test4-35.20221212.bit",
	"test4-36.20221212.bit",
	"test4-37.20221212.bit",
	"test4-38.20221212.bit",
	"test4-39.20221212.bit",
	"test4-4.20221212.bit",
	"test4-40.20221212.bit",
	"test4-41.20221212.bit",
	"test4-42.20221212.bit",
	"test4-43.20221212.bit",
	"test4-44.20221212.bit",
	"test4-45.20221212.bit",
	"test4-46.20221212.bit",
	"test4-47.20221212.bit",
	"test4-48.20221212.bit",
	"test4-49.20221212.bit",
	"test4-5.20221212.bit",
	"test4-50.20221212.bit",
	"test4-51.20221212.bit",
	"test4-52.20221212.bit",
	"test4-53.20221212.bit",
	"test4-54.20221212.bit",
	"test4-55.20221212.bit",
	"test4-56.20221212.bit",
	"test4-57.20221212.bit",
	"test4-58.20221212.bit",
	"test4-59.20221212.bit",
	"test4-6.20221212.bit",
	"test4-60.20221212.bit",
	"test4-61.20221212.bit",
	"test4-62.20221212.bit",
	"test4-63.20221212.bit",
	"test4-64.20221212.bit",
	"test4-65.20221212.bit",
	"test4-66.20221212.bit",
	"test4-67.20221212.bit",
	"test4-68.20221212.bit",
	"test4-69.20221212.bit",
	"test4-7.20221212.bit",
	"test4-70.20221212.bit",
	"test4-71.20221212.bit",
	"test4-72.20221212.bit",
	"test4-73.20221212.bit",
	"test4-74.20221212.bit",
	"test4-75.20221212.bit",
	"test4-76.20221212.bit",
	"test4-77.20221212.bit",
	"test4-78.20221212.bit",
	"test4-79.20221212.bit",
	"test4-8.20221212.bit",
	"test4-80.20221212.bit",
	"test4-81.20221212.bit",
	"test4-82.20221212.bit",
	"test4-83.20221212.bit",
	"test4-84.20221212.bit",
	"test4-85.20221212.bit",
	"test4-86.20221212.bit",
	"test4-87.20221212.bit",
	"test4-88.20221212.bit",
	"test4-89.20221212.bit",
	"test4-9.20221212.bit",
	"test4-90.20221212.bit",
	"test4-91.20221212.bit",
	"test4-92.20221212.bit",
	"test4-93.20221212.bit",
	"test4-94.20221212.bit",
	"test4-95.20221212.bit",
	"test4-96.20221212.bit",
	"test4-97.20221212.bit",
	"test4-98.20221212.bit",
	"test4-99.20221212.bit",
	"test5-0.20221212.bit",
	"test5-1.20221212.bit",
	"test5-10.20221212.bit",
	"test5-100.20221212.bit",
	"test5-101.20221212.bit",
	"test5-102.20221212.bit",
	"test5-103.20221212.bit",
	"test5-104.20221212.bit",
	"test5-105.20221212.bit",
	"test5-106.20221212.bit",
	"test5-107.20221212.bit",
	"test5-108.20221212.bit",
	"test5-109.20221212.bit",
	"test5-11.20221212.bit",
	"test5-110.20221212.bit",
	"test5-111.20221212.bit",
	"test5-112.20221212.bit",
	"test5-113.20221212.bit",
	"test5-114.20221212.bit",
	"test5-115.20221212.bit",
	"test5-116.20221212.bit",
	"test5-117.20221212.bit",
	"test5-118.20221212.bit",
	"test5-119.20221212.bit",
	"test5-12.20221212.bit",
	"test5-120.20221212.bit",
	"test5-121.20221212.bit",
	"test5-122.20221212.bit",
	"test5-123.20221212.bit",
	"test5-124.20221212.bit",
	"test5-125.20221212.bit",
	"test5-126.20221212.bit",
	"test5-127.20221212.bit",
	"test5-128.20221212.bit",
	"test5-129.20221212.bit",
	"test5-13.20221212.bit",
	"test5-130.20221212.bit",
	"test5-131.20221212.bit",
	"test5-132.20221212.bit",
	"test5-133.20221212.bit",
	"test5-134.20221212.bit",
	"test5-135.20221212.bit",
	"test5-136.20221212.bit",
	"test5-137.20221212.bit",
	"test5-138.20221212.bit",
	"test5-139.20221212.bit",
	"test5-14.20221212.bit",
	"test5-140.20221212.bit",
	"test5-141.20221212.bit",
	"test5-142.20221212.bit",
	"test5-143.20221212.bit",
	"test5-144.20221212.bit",
	"test5-145.20221212.bit",
	"test5-146.20221212.bit",
	"test5-147.20221212.bit",
	"test5-148.20221212.bit",
	"test5-149.20221212.bit",
	"test5-15.20221212.bit",
	"test5-150.20221212.bit",
	"test5-151.20221212.bit",
	"test5-152.20221212.bit",
	"test5-153.20221212.bit",
	"test5-154.20221212.bit",
	"test5-155.20221212.bit",
	"test5-156.20221212.bit",
	"test5-157.20221212.bit",
	"test5-158.20221212.bit",
	"test5-159.20221212.bit",
	"test5-16.20221212.bit",
	"test5-160.20221212.bit",
	"test5-161.20221212.bit",
	"test5-162.20221212.bit",
	"test5-163.20221212.bit",
	"test5-164.20221212.bit",
	"test5-165.20221212.bit",
	"test5-166.20221212.bit",
	"test5-167.20221212.bit",
	"test5-168.20221212.bit",
	"test5-169.20221212.bit",
	"test5-17.20221212.bit",
	"test5-170.20221212.bit",
	"test5-171.20221212.bit",
	"test5-172.20221212.bit",
	"test5-173.20221212.bit",
	"test5-174.20221212.bit",
	"test5-175.20221212.bit",
	"test5-176.20221212.bit",
	"test5-177.20221212.bit",
	"test5-178.20221212.bit",
	"test5-179.20221212.bit",
	"test5-18.20221212.bit",
	"test5-180.20221212.bit",
	"test5-181.20221212.bit",
	"test5-182.20221212.bit",
	"test5-183.20221212.bit",
	"test5-184.20221212.bit",
	"test5-185.20221212.bit",
	"test5-186.20221212.bit",
	"test5-187.20221212.bit",
	"test5-188.20221212.bit",
	"test5-189.20221212.bit",
	"test5-19.20221212.bit",
	"test5-190.20221212.bit",
	"test5-191.20221212.bit",
	"test5-192.20221212.bit",
	"test5-193.20221212.bit",
	"test5-194.20221212.bit",
	"test5-195.20221212.bit",
	"test5-196.20221212.bit",
	"test5-197.20221212.bit",
	"test5-198.20221212.bit",
	"test5-199.20221212.bit",
	"test5-2.20221212.bit",
	"test5-20.20221212.bit",
	"test5-200.20221212.bit",
	"test5-201.20221212.bit",
	"test5-202.20221212.bit",
	"test5-203.20221212.bit",
	"test5-204.20221212.bit",
	"test5-205.20221212.bit",
	"test5-206.20221212.bit",
	"test5-207.20221212.bit",
	"test5-208.20221212.bit",
	"test5-209.20221212.bit",
	"test5-21.20221212.bit",
	"test5-210.20221212.bit",
	"test5-211.20221212.bit",
	"test5-212.20221212.bit",
	"test5-213.20221212.bit",
	"test5-214.20221212.bit",
	"test5-215.20221212.bit",
	"test5-216.20221212.bit",
	"test5-217.20221212.bit",
	"test5-218.20221212.bit",
	"test5-219.20221212.bit",
	"test5-22.20221212.bit",
	"test5-220.20221212.bit",
	"test5-221.20221212.bit",
	"test5-222.20221212.bit",
	"test5-223.20221212.bit",
	"test5-224.20221212.bit",
	"test5-225.20221212.bit",
	"test5-226.20221212.bit",
	"test5-227.20221212.bit",
	"test5-228.20221212.bit",
	"test5-229.20221212.bit",
	"test5-23.20221212.bit",
	"test5-230.20221212.bit",
	"test5-231.20221212.bit",
	"test5-232.20221212.bit",
	"test5-233.20221212.bit",
	"test5-234.20221212.bit",
	"test5-235.20221212.bit",
	"test5-236.20221212.bit",
	"test5-237.20221212.bit",
	"test5-238.20221212.bit",
	"test5-239.20221212.bit",
	"test5-24.20221212.bit",
	"test5-240.20221212.bit",
	"test5-241.20221212.bit",
	"test5-242.20221212.bit",
	"test5-243.20221212.bit",
	"test5-244.20221212.bit",
	"test5-245.20221212.bit",
	"test5-246.20221212.bit",
	"test5-247.20221212.bit",
	"test5-248.20221212.bit",
	"test5-249.20221212.bit",
	"test5-25.20221212.bit",
	"test5-250.20221212.bit",
	"test5-251.20221212.bit",
	"test5-252.20221212.bit",
	"test5-253.20221212.bit",
	"test5-254.20221212.bit",
	"test5-255.20221212.bit",
	"test5-256.20221212.bit",
	"test5-257.20221212.bit",
	"test5-258.20221212.bit",
	"test5-259.20221212.bit",
	"test5-26.20221212.bit",
	"test5-260.20221212.bit",
	"test5-261.20221212.bit",
	"test5-262.20221212.bit",
	"test5-263.20221212.bit",
	"test5-264.20221212.bit",
	"test5-265.20221212.bit",
	"test5-266.20221212.bit",
	"test5-267.20221212.bit",
	"test5-268.20221212.bit",
	"test5-269.20221212.bit",
	"test5-27.20221212.bit",
	"test5-270.20221212.bit",
	"test5-271.20221212.bit",
	"test5-272.20221212.bit",
	"test5-273.20221212.bit",
	"test5-274.20221212.bit",
	"test5-275.20221212.bit",
	"test5-276.20221212.bit",
	"test5-277.20221212.bit",
	"test5-278.20221212.bit",
	"test5-279.20221212.bit",
	"test5-28.20221212.bit",
	"test5-280.20221212.bit",
	"test5-281.20221212.bit",
	"test5-282.20221212.bit",
	"test5-283.20221212.bit",
	"test5-284.20221212.bit",
	"test5-285.20221212.bit",
	"test5-286.20221212.bit",
	"test5-287.20221212.bit",
	"test5-288.20221212.bit",
	"test5-289.20221212.bit",
	"test5-29.20221212.bit",
	"test5-290.20221212.bit",
	"test5-291.20221212.bit",
	"test5-292.20221212.bit",
	"test5-293.20221212.bit",
	"test5-294.20221212.bit",
	"test5-295.20221212.bit",
	"test5-296.20221212.bit",
	"test5-297.20221212.bit",
	"test5-298.20221212.bit",
	"test5-299.20221212.bit",
	"test5-3.20221212.bit",
	"test5-30.20221212.bit",
	"test5-300.20221212.bit",
	"test5-301.20221212.bit",
	"test5-302.20221212.bit",
	"test5-303.20221212.bit",
	"test5-304.20221212.bit",
	"test5-305.20221212.bit",
	"test5-306.20221212.bit",
	"test5-307.20221212.bit",
	"test5-308.20221212.bit",
	"test5-309.20221212.bit",
	"test5-31.20221212.bit",
	"test5-310.20221212.bit",
	"test5-311.20221212.bit",
	"test5-312.20221212.bit",
	"test5-313.20221212.bit",
	"test5-314.20221212.bit",
	"test5-315.20221212.bit",
	"test5-316.20221212.bit",
	"test5-317.20221212.bit",
	"test5-318.20221212.bit",
	"test5-319.20221212.bit",
	"test5-32.20221212.bit",
	"test5-320.20221212.bit",
	"test5-321.20221212.bit",
	"test5-322.20221212.bit",
	"test5-323.20221212.bit",
	"test5-324.20221212.bit",
	"test5-325.20221212.bit",
	"test5-326.20221212.bit",
	"test5-327.20221212.bit",
	"test5-328.20221212.bit",
	"test5-329.20221212.bit",
	"test5-33.20221212.bit",
	"test5-330.20221212.bit",
	"test5-331.20221212.bit",
	"test5-332.20221212.bit",
	"test5-333.20221212.bit",
	"test5-334.20221212.bit",
	"test5-335.20221212.bit",
	"test5-336.20221212.bit",
	"test5-337.20221212.bit",
	"test5-338.20221212.bit",
	"test5-339.20221212.bit",
	"test5-34.20221212.bit",
	"test5-340.20221212.bit",
	"test5-341.20221212.bit",
	"test5-342.20221212.bit",
	"test5-343.20221212.bit",
	"test5-344.20221212.bit",
	"test5-345.20221212.bit",
	"test5-346.20221212.bit",
	"test5-347.20221212.bit",
	"test5-348.20221212.bit",
	"test5-349.20221212.bit",
	"test5-35.20221212.bit",
	"test5-350.20221212.bit",
	"test5-351.20221212.bit",
	"test5-352.20221212.bit",
	"test5-353.20221212.bit",
	"test5-354.20221212.bit",
	"test5-355.20221212.bit",
	"test5-356.20221212.bit",
	"test5-357.20221212.bit",
	"test5-358.20221212.bit",
	"test5-359.20221212.bit",
	"test5-36.20221212.bit",
	"test5-360.20221212.bit",
	"test5-361.20221212.bit",
	"test5-362.20221212.bit",
	"test5-363.20221212.bit",
	"test5-364.20221212.bit",
	"test5-365.20221212.bit",
	"test5-366.20221212.bit",
	"test5-367.20221212.bit",
	"test5-368.20221212.bit",
	"test5-369.20221212.bit",
	"test5-37.20221212.bit",
	"test5-370.20221212.bit",
	"test5-371.20221212.bit",
	"test5-372.20221212.bit",
	"test5-373.20221212.bit",
	"test5-374.20221212.bit",
	"test5-375.20221212.bit",
	"test5-376.20221212.bit",
	"test5-377.20221212.bit",
	"test5-378.20221212.bit",
	"test5-379.20221212.bit",
	"test5-38.20221212.bit",
	"test5-380.20221212.bit",
	"test5-381.20221212.bit",
	"test5-382.20221212.bit",
	"test5-383.20221212.bit",
	"test5-384.20221212.bit",
	"test5-385.20221212.bit",
	"test5-386.20221212.bit",
	"test5-387.20221212.bit",
	"test5-388.20221212.bit",
	"test5-389.20221212.bit",
	"test5-39.20221212.bit",
	"test5-390.20221212.bit",
	"test5-391.20221212.bit",
	"test5-392.20221212.bit",
	"test5-393.20221212.bit",
	"test5-394.20221212.bit",
	"test5-395.20221212.bit",
	"test5-396.20221212.bit",
	"test5-397.20221212.bit",
	"test5-398.20221212.bit",
	"test5-399.20221212.bit",
	"test5-4.20221212.bit",
	"test5-40.20221212.bit",
	"test5-400.20221212.bit",
	"test5-401.20221212.bit",
	"test5-402.20221212.bit",
	"test5-403.20221212.bit",
	"test5-404.20221212.bit",
	"test5-405.20221212.bit",
	"test5-406.20221212.bit",
	"test5-407.20221212.bit",
	"test5-408.20221212.bit",
	"test5-409.20221212.bit",
	"test5-41.20221212.bit",
	"test5-410.20221212.bit",
	"test5-411.20221212.bit",
	"test5-412.20221212.bit",
	"test5-413.20221212.bit",
	"test5-414.20221212.bit",
	"test5-415.20221212.bit",
	"test5-416.20221212.bit",
	"test5-417.20221212.bit",
	"test5-418.20221212.bit",
	"test5-419.20221212.bit",
	"test5-42.20221212.bit",
	"test5-420.20221212.bit",
	"test5-421.20221212.bit",
	"test5-422.20221212.bit",
	"test5-423.20221212.bit",
	"test5-424.20221212.bit",
	"test5-425.20221212.bit",
	"test5-426.20221212.bit",
	"test5-427.20221212.bit",
	"test5-428.20221212.bit",
	"test5-429.20221212.bit",
	"test5-43.20221212.bit",
	"test5-430.20221212.bit",
	"test5-431.20221212.bit",
	"test5-432.20221212.bit",
	"test5-433.20221212.bit",
	"test5-434.20221212.bit",
	"test5-435.20221212.bit",
	"test5-436.20221212.bit",
	"test5-437.20221212.bit",
	"test5-438.20221212.bit",
	"test5-439.20221212.bit",
	"test5-44.20221212.bit",
	"test5-440.20221212.bit",
	"test5-441.20221212.bit",
	"test5-442.20221212.bit",
	"test5-443.20221212.bit",
	"test5-444.20221212.bit",
	"test5-445.20221212.bit",
	"test5-446.20221212.bit",
	"test5-447.20221212.bit",
	"test5-448.20221212.bit",
	"test5-449.20221212.bit",
	"test5-45.20221212.bit",
	"test5-450.20221212.bit",
	"test5-451.20221212.bit",
	"test5-452.20221212.bit",
	"test5-453.20221212.bit",
	"test5-454.20221212.bit",
	"test5-455.20221212.bit",
	"test5-456.20221212.bit",
	"test5-457.20221212.bit",
	"test5-458.20221212.bit",
	"test5-459.20221212.bit",
	"test5-46.20221212.bit",
	"test5-460.20221212.bit",
	"test5-461.20221212.bit",
	"test5-462.20221212.bit",
	"test5-463.20221212.bit",
	"test5-464.20221212.bit",
	"test5-465.20221212.bit",
	"test5-466.20221212.bit",
	"test5-467.20221212.bit",
	"test5-468.20221212.bit",
	"test5-469.20221212.bit",
	"test5-47.20221212.bit",
	"test5-470.20221212.bit",
	"test5-471.20221212.bit",
	"test5-472.20221212.bit",
	"test5-473.20221212.bit",
	"test5-474.20221212.bit",
	"test5-475.20221212.bit",
	"test5-476.20221212.bit",
	"test5-477.20221212.bit",
	"test5-478.20221212.bit",
	"test5-479.20221212.bit",
	"test5-48.20221212.bit",
	"test5-480.20221212.bit",
	"test5-481.20221212.bit",
	"test5-482.20221212.bit",
	"test5-483.20221212.bit",
	"test5-484.20221212.bit",
	"test5-485.20221212.bit",
	"test5-486.20221212.bit",
	"test5-487.20221212.bit",
	"test5-488.20221212.bit",
	"test5-489.20221212.bit",
	"test5-49.20221212.bit",
	"test5-490.20221212.bit",
	"test5-491.20221212.bit",
	"test5-492.20221212.bit",
	"test5-493.20221212.bit",
	"test5-494.20221212.bit",
	"test5-495.20221212.bit",
	"test5-496.20221212.bit",
	"test5-497.20221212.bit",
	"test5-498.20221212.bit",
	"test5-499.20221212.bit",
	"test5-5.20221212.bit",
	"test5-50.20221212.bit",
	"test5-51.20221212.bit",
	"test5-52.20221212.bit",
	"test5-53.20221212.bit",
	"test5-54.20221212.bit",
	"test5-55.20221212.bit",
	"test5-56.20221212.bit",
	"test5-57.20221212.bit",
	"test5-58.20221212.bit",
	"test5-59.20221212.bit",
	"test5-6.20221212.bit",
	"test5-60.20221212.bit",
	"test5-61.20221212.bit",
	"test5-62.20221212.bit",
	"test5-63.20221212.bit",
	"test5-64.20221212.bit",
	"test5-65.20221212.bit",
	"test5-66.20221212.bit",
	"test5-67.20221212.bit",
	"test5-68.20221212.bit",
	"test5-69.20221212.bit",
	"test5-7.20221212.bit",
	"test5-70.20221212.bit",
	"test5-71.20221212.bit",
	"test5-72.20221212.bit",
	"test5-73.20221212.bit",
	"test5-74.20221212.bit",
	"test5-75.20221212.bit",
	"test5-76.20221212.bit",
	"test5-77.20221212.bit",
	"test5-78.20221212.bit",
	"test5-79.20221212.bit",
	"test5-8.20221212.bit",
	"test5-80.20221212.bit",
	"test5-81.20221212.bit",
	"test5-82.20221212.bit",
	"test5-83.20221212.bit",
	"test5-84.20221212.bit",
	"test5-85.20221212.bit",
	"test5-86.20221212.bit",
	"test5-87.20221212.bit",
	"test5-88.20221212.bit",
	"test5-89.20221212.bit",
	"test5-9.20221212.bit",
	"test5-90.20221212.bit",
	"test5-91.20221212.bit",
	"test5-92.20221212.bit",
	"test5-93.20221212.bit",
	"test5-94.20221212.bit",
	"test5-95.20221212.bit",
	"test5-96.20221212.bit",
	"test5-97.20221212.bit",
	"test5-98.20221212.bit",
	"test5-99.20221212.bit",
}

func TestList(t *testing.T) {
	var smtRecordList []tables.TableSmtRecordInfo
	smtRecordList = append(smtRecordList,
		tables.TableSmtRecordInfo{MintSignId: ""},
		tables.TableSmtRecordInfo{MintSignId: ""},
		tables.TableSmtRecordInfo{MintSignId: ""},
		tables.TableSmtRecordInfo{MintSignId: "a"},
		tables.TableSmtRecordInfo{MintSignId: "a"},
		tables.TableSmtRecordInfo{MintSignId: "a"},
		tables.TableSmtRecordInfo{MintSignId: ""},
		tables.TableSmtRecordInfo{MintSignId: ""},
	)
	config.Cfg.Das.MaxCreateCount = 8
	count := 0
	addTask := true
	lastMintSignId := ""
	for i, smtRecord := range smtRecordList {
		if count == config.Cfg.Das.MaxCreateCount {
			addTask = true
			count = 0
		} else if lastMintSignId != "" && smtRecord.MintSignId != "" && lastMintSignId != smtRecord.MintSignId {
			addTask = true
			count = 0
		}
		if smtRecord.MintSignId != "" {
			lastMintSignId = smtRecord.MintSignId
		}
		count++

		fmt.Println(i, addTask, lastMintSignId)
		if addTask {
			addTask = false
		}
	}
}
